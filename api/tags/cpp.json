{"name":"cpp","postlist":[{"title":"C++基础","slug":"cpp-info","date":"2022-01-19T10:10:26.000Z","updated":"2022-01-19T10:27:23.174Z","comments":true,"path":"api/articles/cpp-info.json","excerpt":null,"keywords":"c,c++,核心网,网络,DPDK,vpp,python,shell,go","cover":"/archives/8c82138a/cpp_duotai.jpg","content":"<p>主题：本篇内容是对c++基础概念的理解归纳</p>\n<span id=\"more\"></span>\n<h3 id=\"一-C-的基本概念\"><a href=\"#一-C-的基本概念\" class=\"headerlink\" title=\"一.C++的基本概念\"></a>一.C++的基本概念</h3><p>1.封装<br>2.继承<br>3.多态<br>    多态图描述<br><img src=\"/archives/8c82138a/cpp_duotai.jpg\" alt=\"多态\"><br>    代码层面上理解虚函数表和虚指针</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//virtual.h</span><br><span class=\"line\">#pragma once</span><br><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">class virtualBase</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">public:</span><br><span class=\"line\">    virtualBase() &#123;&#125;</span><br><span class=\"line\">    ~virtualBase() &#123;&#125;</span><br><span class=\"line\">    virtual void func1()&#123;</span><br><span class=\"line\">        cout &lt;&lt; &quot;virtualBase::func1&quot; &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    virtual void func2()&#123;</span><br><span class=\"line\">        cout &lt;&lt; &quot;virtualBase::func1&quot; &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    virtual void func3()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cout &lt;&lt; &quot;virtualBase::func3&quot; &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    void func4()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cout &lt;&lt; &quot;virtualBase::func4 NOT VIRTUAL&quot;&lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">private:</span><br><span class=\"line\">    int a;</span><br><span class=\"line\">    char b;</span><br><span class=\"line\">    short c;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">class A:public virtualBase&#123;</span><br><span class=\"line\">public:</span><br><span class=\"line\">    A()&#123;&#125;</span><br><span class=\"line\">    ~A()&#123;&#125;</span><br><span class=\"line\">    virtual void func1()&#123;</span><br><span class=\"line\">        cout &lt;&lt; &quot;A::func1&quot;&lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    virtual void func2()&#123;</span><br><span class=\"line\">        cout &lt;&lt; &quot;A::func2&quot; &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    void func4()&#123;</span><br><span class=\"line\">        cout &lt;&lt; &quot;A::func4&quot; &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">private:</span><br><span class=\"line\">    int c;</span><br><span class=\"line\">    int d;</span><br><span class=\"line\">    char f;</span><br><span class=\"line\">    short e;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//virtal.cpp</span><br><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &quot;virtual.h&quot;</span><br><span class=\"line\">typedef void(*pfunc)(); </span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    virtualBase *cvb = nullptr;</span><br><span class=\"line\">    cout &lt;&lt; &quot;[INIT] virtualBase *cvb = &quot; &lt;&lt; cvb&lt;&lt; endl;</span><br><span class=\"line\">    A ca;</span><br><span class=\"line\">    printf( &quot;[INIT] A ca ,&amp;ca = %p\\n&quot;, &amp;ca);</span><br><span class=\"line\">    cvb = &amp;ca;</span><br><span class=\"line\">    printf( &quot;[MODY] cvb = &amp;ca, cvb = %p\\n&quot;, cvb);</span><br><span class=\"line\">    cvb-&gt;func1();</span><br><span class=\"line\">    cout&lt;&lt; &quot;[PRIF] A::func1(), cvb =&quot; &lt;&lt; (long*)cvb &lt;&lt; endl;</span><br><span class=\"line\">    cout&lt;&lt; &quot;[PRIF] A::func1(), cvbFunc1 =&quot; &lt;&lt; (long*)*(long*)cvb &lt;&lt; endl;</span><br><span class=\"line\">    cout&lt;&lt; &quot;[PRIF] A::func1(), cvbFunc1 pfunc =&quot; &lt;&lt; (pfunc *)*(long*)cvb &lt;&lt; endl;</span><br><span class=\"line\">    pfunc* f1 = (pfunc*)*(long*)cvb;</span><br><span class=\"line\">    cout &lt;&lt;&quot;ptr:&quot;&lt;&lt;(long*)*(long *)cvb&lt;&lt; &quot;  f1:&quot;&lt;&lt; f1&lt;&lt; &quot; *f1:&quot; &lt;&lt; *f1&lt;&lt;&quot;--&gt;&quot;;</span><br><span class=\"line\">    (*f1)();</span><br><span class=\"line\">    cout &lt;&lt; &quot;=======================&quot;&lt;&lt; endl;</span><br><span class=\"line\">    pfunc* f2 = (pfunc*)((long*)*(long*)cvb + 1);</span><br><span class=\"line\">    cout &lt;&lt;&quot;ptr:&quot;&lt;&lt;((long*)*(long *)cvb+1)&lt;&lt; &quot;  f2:&quot;&lt;&lt; f2&lt;&lt; &quot; *f2:&quot;&lt;&lt;*f2&lt;&lt;&quot; --&gt;&quot;;</span><br><span class=\"line\">    (*f2)();</span><br><span class=\"line\">    cout &lt;&lt; &quot;=======================&quot;&lt;&lt; endl;</span><br><span class=\"line\">    pfunc* f3 = (pfunc*)((long*)*(long*)cvb + 2);</span><br><span class=\"line\">    cout &lt;&lt;&quot;ptr:&quot;&lt;&lt;((long*)*(long *)cvb+2)&lt;&lt; &quot;  f3:&quot;&lt;&lt; f3&lt;&lt; &quot; *f3:&quot;&lt;&lt;*f3&lt;&lt;&quot; --&gt;&quot;;</span><br><span class=\"line\">    (*f3)();</span><br><span class=\"line\">    cout &lt;&lt; &quot;=======================&quot;&lt;&lt; endl;</span><br><span class=\"line\">    cvb-&gt;func2();</span><br><span class=\"line\">    cout&lt;&lt; &quot;[PRIF] A::func2(), funcPtr =&quot; &lt;&lt; &amp;A::func2 &lt;&lt; endl;</span><br><span class=\"line\">    cvb-&gt;func3();</span><br><span class=\"line\">    cout&lt;&lt; &quot;[PRIF] A::func3(), funcPtr =&quot; &lt;&lt;&amp;A::func3 &lt;&lt; endl;</span><br><span class=\"line\">    cvb-&gt;func4();</span><br><span class=\"line\">    cout&lt;&lt; &quot;[PRIF] A::func4(), funcPtr =&quot; &lt;&lt;&amp;A::func4 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    std::cout &lt;&lt; &quot;Hello world&quot; &lt;&lt; std::endl;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(gdb) p cvb</span><br><span class=\"line\">$1 = (virtualBase *) 0x7ffd64111910</span><br><span class=\"line\">(gdb) p *cvb</span><br><span class=\"line\">$2 = &#123;_vptr.virtualBase = 0x56043d601cf0 &lt;vtable for A+16&gt;, a = 65535, b = 1 &#x27;\\001&#x27;, c = 0&#125;</span><br><span class=\"line\">(gdb) p *(long*)(0x56043d601cf0)</span><br><span class=\"line\">$3 = 94576207467496</span><br><span class=\"line\">(gdb) p (long*)*(long*)(0x56043d601cf0)</span><br><span class=\"line\">$4 = (long *) 0x56043d4013e8 &lt;A::func1()&gt;</span><br><span class=\"line\">(gdb) p (long*)*((long*)(0x56043d601cf0)+1)</span><br><span class=\"line\">$5 = (long *) 0x56043d401420 &lt;A::func2()&gt;</span><br><span class=\"line\">(gdb) p (long*)*((long*)(0x56043d601cf0)+2)</span><br><span class=\"line\">$6 = (long *) 0x56043d401324 &lt;virtualBase::func3()&gt;</span><br><span class=\"line\">(gdb) p (long*)*((long*)(0x56043d601cf0)+3)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"二\"><a href=\"#二\" class=\"headerlink\" title=\"二.\"></a>二.</h3>","raw":null,"categories":[{"name":"基础概念","path":"api/categories/基础概念.json"},{"name":"基础概念/面试","path":"api/categories/基础概念/面试.json"}],"tags":[{"name":"cpp","path":"api/tags/cpp.json"},{"name":"多态","path":"api/tags/多态.json"},{"name":"虚函数","path":"api/tags/虚函数.json"},{"name":"virtual","path":"api/tags/virtual.json"},{"name":"虚指针","path":"api/tags/虚指针.json"}]}]}