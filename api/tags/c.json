{"name":"c","postlist":[{"title":"排序算法(一) 快速排序","slug":"sort-quick","date":"2022-01-11T11:59:52.000Z","updated":"2022-01-13T06:53:56.283Z","comments":true,"path":"api/articles/sort-quick.json","excerpt":null,"keywords":"c,c++,核心网,网络,DPDK,vpp,python,shell,go","cover":"/archives/7f40812c/sort_quick.jpg","content":"<p>主题: 快速排序方法和图撕代码</p>\n<span id=\"more\"></span>\n<h2 id=\"一-快速排序流程\"><a href=\"#一-快速排序流程\" class=\"headerlink\" title=\"一. 快速排序流程\"></a>一. 快速排序流程</h2><p>1.首先设定一个分界值，通过该分界值将数组分成左右两部分【本篇分界值key取的是排序数组arr[low],如果要追求尽可能均分，可以取arr[low],arr[high]和arr[(low+high)/2]中中间的一个;<br>2.将大于等于分界值key的数据集中到数组右侧，小于分界值key的集中到数组左侧;<br>3.递归对左边和右边的数据按步骤1，2再次独立排序;</p>\n<h2 id=\"二-快速排序代码对应图解说明\"><a href=\"#二-快速排序代码对应图解说明\" class=\"headerlink\" title=\"二. 快速排序代码对应图解说明\"></a>二. 快速排序代码对应图解说明</h2><p><img src=\"/archives/7f40812c/sort_quick.jpg\" alt=\"快速排序一次处理图解\"></p>\n<h2 id=\"三-快速排序完整代码\"><a href=\"#三-快速排序完整代码\" class=\"headerlink\" title=\"三. 快速排序完整代码\"></a>三. 快速排序完整代码</h2><p>1.C++</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void quick_sort_mid(vector&lt;int&gt; &amp;arr, int start, int end)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int key = arr[start];</span><br><span class=\"line\">    int low = start;</span><br><span class=\"line\">    int high = end;</span><br><span class=\"line\">    int count = 0;</span><br><span class=\"line\">    while(low &lt; high)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        while(arr[high] &gt;= key &amp;&amp; high &gt; low)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            high--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(arr[high] &lt; key)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            count++;</span><br><span class=\"line\">            arr[low] = arr[high];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        while(arr[low] &lt;= key &amp;&amp; high &gt; low)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            low++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(arr[low] &gt; key)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            count++;</span><br><span class=\"line\">            arr[high] = arr[low];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    if(low == high)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        count++;</span><br><span class=\"line\">        arr[low] = key;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    if(low - start &gt;= 2)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        fast_sort_mid(input, start, low-1);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    if(end - high &gt;= 2)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        fast_sort_mid(input, high + 1, end);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//快速排序</span><br><span class=\"line\">void quick_sort(vector&lt;int&gt; &amp;input)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int low = 0; </span><br><span class=\"line\">    int high = input.size()-1;</span><br><span class=\"line\">    quick_sort_mid(input, low, high);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2.Go</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//传参数arr是切片类型，此时是引用传递</span><br><span class=\"line\">//拓展: go中 数组[num]int是值传递，若需要引用传数组需要传递指针</span><br><span class=\"line\">func quickSortMid(arr []int,start int, end int)&#123;</span><br><span class=\"line\">\tif(end &lt;= start)&#123;</span><br><span class=\"line\">\t\treturn</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    low := start</span><br><span class=\"line\">    high := end</span><br><span class=\"line\">    key := arr[low]</span><br><span class=\"line\">    for(low &lt; high)&#123;</span><br><span class=\"line\">        for(low &lt; high &amp;&amp; arr[high] &gt; key)&#123;</span><br><span class=\"line\">            high--</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(low &lt; high)&#123;</span><br><span class=\"line\">            arr[low] = arr[high]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for(low &lt; high &amp;&amp; arr[low] &lt; key)&#123;</span><br><span class=\"line\">            low++</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(low &lt; high)&#123;</span><br><span class=\"line\">            arr[high] = arr[low]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\tif(low == high)&#123;</span><br><span class=\"line\">\t\tarr[low] = key</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tfmt.Println(arr)</span><br><span class=\"line\">    quickSortMid(arr,start,low-1)</span><br><span class=\"line\">    quickSortMid(arr,high+1,end)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">func quickSort(arr []int)&#123;</span><br><span class=\"line\">    quickSortMid(arr,0, len(arr)-1)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","raw":null,"categories":[{"name":"算法","path":"api/categories/算法.json"},{"name":"算法/排序","path":"api/categories/算法/排序.json"}],"tags":[{"name":"快速排序","path":"api/tags/快速排序.json"},{"name":"c","path":"api/tags/c.json"}]}]}